services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: alignment_mysql
    env_file:
      - .env.docker
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - alignment_network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: alignment_rabbitmq
    env_file:
      - .env.docker
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - alignment_network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: alignment_minio
    env_file:
      - .env.docker
    ports:
      - "9000:9000"     # API port
      - "9001:9001"     # Console port
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - alignment_network

  # OpenObserve Logging and Monitoring
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    container_name: alignment_openobserve
    env_file:
      - .env.docker
    environment:
      ZO_DATA_DIR: /data
    ports:
      - "5080:5080"
    volumes:
      - ./data/openobserve:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - alignment_network

  # FastAPI Application
  api:
    build: .
    container_name: alignment_api
    env_file:
      - .env.docker
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./api:/app/api
      - ./shared:/app/shared
    networks:
      - alignment_network

  # Flower (Celery monitoring)
  flower:
    image: mher/flower:2.0.1
    container_name: alignment_flower
    env_file:
      - .env.docker
    environment:
      FLOWER_PORT: 5555
    # Other environment variables loaded from .env.docker via env_file
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - alignment_network

networks:
  alignment_network:
    driver: bridge
